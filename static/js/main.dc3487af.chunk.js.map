{"version":3,"sources":["store/users/users.constants.ts","API/urls.ts","API/net.ts","store/users/users.actions.ts","store/users/users.selectors.ts","store/users/users.initialState.ts","store/users/index.ts","components/Loader/index.ts","components/Loader/Loader.tsx","store/users/users.reducer.ts","store/index.ts","routes/MainPage/index.tsx","utils/additionalFunctions/debounce.ts","utils/additionalFunctions/getNameAndLast.ts","routes/AddUsersPage/index.tsx","routes/rootRoute.tsx","index.tsx"],"names":["ACTION_TYPES","URLs","getUsers","a","axios","get","headers","params","results","data","status","statusText","ACTIONS","writeUsersToStore","users","type","WRITE_TO_STORE_USERS","stateLoadingUsers","state","STATE_LOAD","getUsersAction","dispatch","response","map","index","name","picture","location","email","phone","registered","firstName","first","lastName","last","country","city","Date","date","toLocaleDateString","icon","large","id","now","toString","errorMessage","console","error","deleteUser","DELETE_USER","addUser","userInfo","ADD_USER","usersSelector","initialState","isLoaded","deleteUserAction","addUserAction","Loader","className","handleReducers","stateLoading","UserInfo","concat","filter","user","rootReducer","combineReducers","action","DEF","middlewares","logger","thunkMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancers","composeWithDevTools","store","createStore","MainPage","useDispatch","useState","getState","usersList","setUsersList","onSearchDebounce","func","delay","timer","args","clearTimeout","setTimeout","apply","debounce","wordCount","value","target","searchRequest","split","elem","slice","length","usersListFromStore","includes","onDelete","val","useSelector","useEffect","itemID","aria-label","onChange","onClick","document","getElementById","Table","striped","bordered","hover","variant","label","scope","src","alt","AddUserPage","setUserInfo","stateRequest","setStateRequest","substring","trim","onSubmit","event","preventDefault","htmlFor","required","inputMode","RootRoute","linkState","useRef","pathname","current","links","path","Component","log","Navbar","bg","expand","Container","Brand","Toggle","aria-controls","Collapse","Nav","link","key","to","children","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dc3487af.chunk.js","sourcesContent":["enum ACTION_TYPES {\n    STATE_LOAD = \"USERS :: STATE LOAD\",\n    WRITE_TO_STORE_USERS = \"USERS :: WRITE TO STORE USERS\",\n    DELETE_USER = \"USERS :: DELETE USER\",\n    ADD_USER = \"USERS :: ADD USER\"\n}\n\nexport default ACTION_TYPES","export const URLs = {\n    GET_USERS: 'https://randomuser.me/api/'\n}","import { URLs } from './urls';\nimport axios, {AxiosResponse} from \"axios\"\n\n/**\n * Request to get users from the Randomosier service\n * @param amount This is the parameter for the number of users you want to get\n * @returns Returns Promise\n */\n\nexport const getUsers = async ():\n    Promise<Pick<AxiosResponse, 'status' | 'statusText'> &\n    { data: { results: USER_TYPES.REST_Users['results'], info: USER_TYPES.REST_Result } }> => {\n    \n    const { data, status, statusText } = await axios.get(URLs.GET_USERS, {\n        headers: {\"Access-Control-Allow-Origin\": \"*\"},\n        params: {\n            results: 15,\n        }\n    })\n    return {\n        data,\n        status,\n        statusText\n    }\n}","import ACTION_TYPES from \"./users.constants\";\nimport { getUsers } from \"../../API\";\n\nexport const ACTIONS = {\n    writeUsersToStore: (users) => ({\n        type: ACTION_TYPES.WRITE_TO_STORE_USERS,\n        data: users\n    }),\n    stateLoadingUsers: (state) => ({\n        type: ACTION_TYPES.STATE_LOAD,\n        data: state\n    }),\n    getUsersAction: () => async (dispatch) => {\n        dispatch(ACTIONS.stateLoadingUsers(false))\n        try {\n            const response = await getUsers(),\n                users = response.data.results.map(({\n                    name,\n                    picture,\n                    location,\n                    email,\n                    phone,\n                    registered\n                }, index) => ({\n                    firstName: name.first,\n                    lastName: name.last,\n                    location: {\n                        country: location.country,\n                        city: location.city\n                    },\n                    email,\n                    phone,\n                    registered: new Date(registered.date).toLocaleDateString(),\n                    icon: picture.large,\n                    id: +Date.now().toString() + index\n                }))\n            dispatch(ACTIONS.writeUsersToStore(users))\n            dispatch(ACTIONS.stateLoadingUsers(true))\n        }\n        catch ({errorMessage}) {\n            dispatch(ACTIONS.stateLoadingUsers(true))\n            return console.error(errorMessage);\n        }\n    },\n    deleteUser: (id) => ({\n        type: ACTION_TYPES.DELETE_USER,\n        data: id\n    }),\n    addUser: (userInfo) => ({\n            type: ACTION_TYPES.ADD_USER,\n            data: userInfo\n    })\n}","import { RootState } from \"..\"\n\nexport const usersSelector = (state: RootState): USER_TYPES.State => state.users","export const initialState: USER_TYPES.State = {\n    users: [],\n    isLoaded: false\n}\n","import { ACTIONS } from './users.actions';\n\nexport const getUsersAction = ACTIONS.getUsersAction,\n            deleteUserAction = ACTIONS.deleteUser,\n            addUserAction = ACTIONS.addUser\n\nexport * from './users.constants';\nexport * from './users.selectors';\nexport * from './users.actions'\nexport * from './users.initialState'","import { Loader } from './Loader'\n\nexport default Loader","import React from 'react';\nimport './Loader.css';\n\nexport const Loader = () => <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>","import ACTION_TYPES from './users.constants';\nimport { initialState } from './users.initialState';\n\n\nconst handleReducers = {\n    [ACTION_TYPES.STATE_LOAD]:\n        (state: USER_TYPES.State, stateLoading: boolean): USER_TYPES.State => ({\n                ...state,\n                    isLoaded: stateLoading\n            }),\n    [ACTION_TYPES.WRITE_TO_STORE_USERS]:\n        (state: USER_TYPES.State,\n            users: USER_TYPES.Users['results']): USER_TYPES.State => ({\n                ...state,\n                users\n        }),\n    [ACTION_TYPES.ADD_USER]: (state: USER_TYPES.State, UserInfo: USER_TYPES.UserInfo) => ({\n        ...state,\n        users: state.users?.concat([UserInfo])\n    }),\n    [ACTION_TYPES.DELETE_USER]: (state: USER_TYPES.State, id: number) => ({\n        ...state,\n        users: state.users?.filter((user) => user.id !== id)\n    }),\n    DEF: (state: USER_TYPES.State): USER_TYPES.State => state,\n    },\n    usersReducer = (\n        state: USER_TYPES.State = initialState,\n        action: any,\n    ): USER_TYPES.State => {\n        return (handleReducers[action.type] || handleReducers.DEF)(state, action.data)\n    }   \n\nexport { usersReducer }\n","import { applyMiddleware, createStore, combineReducers } from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport logger from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { usersReducer } from \"./users/users.reducer\";\n\n\n\nconst rootReducer = combineReducers({\n  users: usersReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nconst __DEV__ = true\n\nconst middlewares = [logger, thunkMiddleware],\n      middlewareEnhancer = applyMiddleware(...middlewares),\n      composedEnhancers = composeWithDevTools(middlewareEnhancer)\n\nexport const store = __DEV__ ?\n  createStore(rootReducer, composedEnhancers) :\n  createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\n","import './index.css'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteUserAction, getUsersAction, usersSelector } from '../../store/users'\nimport { useEffect } from 'react'\nimport Loader from '../../components/Loader'\nimport { store } from '../../store'\nimport { debounce, getNameAndLast } from '../../utils/additionalFunctions'\nimport {Table} from 'react-bootstrap'\n\nconst MainPage = () => {\n  const dispatch = useDispatch(),\n    [usersList, setUsersList] = useState<USER_TYPES.Users['results']>(store.getState().users.users!),\n      \n    onSearchDebounce = debounce(function ({ target: { value } }) {\n      const searchRequest = getNameAndLast(value, 2)\n      setUsersList(value.length !== 0 ? usersListFromStore!.filter(({ firstName, lastName }) =>\n          firstName.includes(searchRequest[0]) ||\n          firstName.includes(searchRequest[1]) ||\n          lastName.includes(searchRequest[0]) ||\n          lastName.includes(searchRequest[1])\n      ): usersListFromStore!)\n    }, 1000),\n\n    onDelete = (val) => dispatch(deleteUserAction(+val.target.id)),\n\n    onReset = () => {\n      (document.getElementById('search') as HTMLInputElement).value = ''\n      setUsersList(usersListFromStore!)\n    },\n\n    headerTable = [\n      '№',\n      'First',\n      'Last',\n      'Picture',\n      'Location',\n      'e-mail',\n      'Phone',\n      'Registred Date',\n      'Delete'\n    ],\n    { users: usersListFromStore, isLoaded } = useSelector(usersSelector)\n  \n  useEffect(() => {\n    setUsersList(usersListFromStore!)\n  }, [usersListFromStore])\n\n  useEffect(() => {\n    if (usersListFromStore?.length === 0) dispatch(getUsersAction())\n  // eslint-disable-next-line\n    }, [])\n    return (\n        <div className='container' >\n              <div className=\"d-flex p-4\">\n                  <input\n                    className=\"form-control me-3\"\n            id=\"search\"\n            itemID='search'\n                    type=\"search\"\n                    aria-label=\"Search\"\n                    onChange={onSearchDebounce}\n                  />\n                  <button\n                    className=\"btn btn-outline-secondary\"\n            type=\"reset\"\n            onClick = {onReset}\n                  >\n                    Reset\n                  </button>\n        </div>\n        <div className='content' >\n          {isLoaded ? usersList!.length === 0 ? <h5 className='text-center pt-4' >No data available</h5> :\n            <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              {headerTable.map((label, index) => <th scope=\"col\" key={index} >{label}</th>)}\n            </tr>\n          </thead>\n          <tbody>\n                {usersList!.map((user, index) => (\n                  <tr key={index}>\n                    <th scope=\"row\">{index++}</th>\n                    <td>{user.firstName}</td>\n                    <td>{user.lastName}</td>\n                      <td>\n                        {user.icon ? <img\n                        className='user-icon'\n                        src={user?.icon}\n                        alt={`Icon by ${user.firstName} ${user.lastName}`}\n                      /> : <p>No icon</p>}\n                      \n                      </td><td>\n                        {user.location ?\n                          <p>{user.location.country ?? null}\n                            {user.location.city && user.location.country && `, `}\n                          {user.location.city ?? null }</p>\n                          : null}\n                    </td>\n                    <td>{user?.email}</td>\n                    <td>{user?.phone}</td>\n                    <td>{user.registered}</td>\n                    <td>\n                      <button\n                        id={user.id.toString()}\n                        onClick={onDelete}\n                        type=\"button\"\n                        className=\"btn btn-outline-danger\">&#65794;</button>\n                    </td>\n                  </tr>\n                ))}\n          </tbody>\n        </Table> : <div className='center'><Loader/></div>}\n          \n        </div>\n                \n          \n        </div>\n    )\n}\nexport {MainPage}","\n/**\n * \n *      ***     Function Debounce     ***\n * \n * @function func This is the function that will be called from the debouncing effects.\n * @param delay This is the delay with which the func\n */\n\nexport function debounce (func: Function, delay: number) {\n    let timer\n    return function (...args): void {\n        clearTimeout(timer)\n        timer = setTimeout(() => {\n            func.apply(this, args)\n        }, delay)\n    }\n  }","\n\n\n/**\n * \n * This function splits the string into an array\n * of individual words specified by the wordCount\n * parameter\n * \n * @param text This is a text string that needs to be split\n * into two words into an array (only the first \n * [wordCount] words)\n * \n * @param wordCount The number of words to select\n * \n * @returns \n * \n */\nexport function getNameAndLast (text: String, wordCount: number): Array<string> {\n    return text.split(' ').filter((elem) => elem !== '').slice(0, wordCount)\n}","import './index.css'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addUserAction, usersSelector } from '../../store/users'\n\nconst AddUserPage = () => {\n    const [userInfo, setUserInfo] = useState<any>({}),\n        [stateRequest, setStateRequest] = useState<String>('def'),\n        dispatch = useDispatch(),\n        {users} = useSelector(usersSelector),\n        onChange = ({ target: { id, value } }) => {\n            if (id.includes('location')) {\n                id = id.substring(9, 20).trim()\n                setUserInfo({ ...userInfo, location: {...userInfo.location, [id]: value} })\n            } else {\n                setUserInfo({ ...userInfo, [id]: value })\n            }\n        }\n    function onSubmit(event) {\n        event.preventDefault();\n        try {\n            dispatch(addUserAction(userInfo))\n            setStateRequest('good')\n            return setTimeout(() => {\n                setStateRequest('def')\n            }, 2000)\n        } catch {\n            setStateRequest('err')\n            return setTimeout(() => setStateRequest('def'), 2000)\n           }\n       }\n    useEffect(() => {\n        setUserInfo({\n            ...userInfo,\n            registered: new Date().toLocaleDateString(),\n            id: +Date.now().toString() + users!.length\n        })\n       // eslint-disable-next-line\n    }, [])\n    return (\n        <div className='p-5'>\n            <form className=\"row g-3 needs-validation\" onSubmit={onSubmit}>\n                <div className=\"col-md-3\">\n                    <label htmlFor=\"validationCustom01\" className=\"form-label\">First name</label>\n                    <input type=\"text\" className=\"form-control\" id=\"firstName\" {...{onChange}} required/>\n                    <div className=\"valid-feedback\"></div>\n                </div>\n                <div className=\"col-md-3\">\n                    <label htmlFor=\"validationCustom02\" className=\"form-label\">Last name</label>\n                    <input type=\"text\" className=\"form-control\" id=\"lastName\" {...{onChange}} required/>\n                    <div className=\"valid-feedback\"></div>\n                </div>\n                <div className=\"col-md-3\">\n                    <label htmlFor=\"validationCustomUsername\" className=\"form-label\">Location (Country)</label>\n                    <input type=\"text\" className=\"form-control\" id=\"location-country\" {...{onChange}}/>\n                </div>\n                <div className=\"col-md-3\">\n                    <label htmlFor=\"validationCustomUsername\" className=\"form-label\">Location (City)</label>\n                    <input type=\"text\" className=\"form-control\" id=\"location-city\" {...{onChange}}/>\n                </div>\n                <div className=\"col-md-3\">\n                    <label htmlFor=\"validationCustom03\" className=\"form-label\">Phone</label>\n                    <input inputMode='tel' type=\"tel\" className=\"form-control\" id=\"phone\" {...{onChange}}/>\n                </div>\n                <div className=\"col-md-3\">\n                    <label htmlFor=\"validationCustom03\" className=\"form-label\">E-Mail</label>\n                    <input type=\"email\" className=\"form-control\" id=\"email\" {...{onChange}}/>\n                </div>\n                <div className=\"col-md-3\">\n                    <label htmlFor=\"validationCustom05\" className=\"form-label\">Picture link</label>\n                    <input type=\"text\" className=\"form-control\" id=\"icon\" {...{onChange}}/>\n                </div>\n                <div className=\"col-12\">\n                    <button className={`btn btn-${stateRequest === 'good' ? 'success' : stateRequest === 'err' ? 'danger' :'primary'}`} onSubmit={onSubmit} type='submit'>Add User</button>\n                </div>\n            </form>\n        </div>\n    )\n}\nexport {AddUserPage}","import React from 'react'\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport { getUsersAction } from '../store/users';\nimport {AddUserPage, MainPage} from './';\nimport { useRef } from 'react';\n\nconst RootRoute = () => {\n  const linkState = useRef<String>(document.location.pathname),\n    dispatch = useDispatch(),\n    onClick = (event) => {\n      linkState.current = event.target.id\n    },\n    links = [\n      {\n        path: '/',\n        label: 'Main',\n        Component: MainPage\n      },\n      {\n        path: '/addUser',\n        label: 'Add User',\n        Component: AddUserPage\n      },\n    ]\n  useEffect(() => {\n    dispatch(getUsersAction())\n  }, [dispatch])\n  console.log(document.location.pathname)\n  \n  return (\n    <Router>\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Container>\n              <Navbar.Brand >APP</Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"me-auto\">\n                  {links.map((link, index) => <Link\n                    {...{\n                      key: index.toString(),\n                      className: `nav-link ${linkState.current === link.path && 'active'}`,\n                      id: link.path,\n                      to: link.path,\n                      children: link.label,\n                      onClick\n                    }} />)}\n                </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n          <Switch>\n            {links.map(({ path, Component }, key) => <Route {...{\n              exact: true,\n              key,\n              path,\n              children: <Component />\n            }} />)}\n          </Switch>\n      </Router>\n    )\n}\nexport default RootRoute","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RootRoute from './routes/rootRoute';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider {...{store}} >\n      <RootRoute />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}